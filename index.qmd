---
title: "Cast Vote Records"
---

This is a Quarto website.

```{r}
#| include: false
suppressPackageStartupMessages({
  library(tidyverse)
  library(gt)
  library(plotly)
  library(glue)
})
```



# Validation

## US House (district)

```{r}
#| echo: false
#| message: false
#| warning: false
cong_summary <- read_csv("data/by-district_val.csv", show_col_types = FALSE)

ush_plot <- plot_ly(
  data = cong_summary |> 
    filter(item == "US_REP"), 
  x = ~valid_DR, 
  y = ~harv_DR, 
  text = ~paste0("District: ", dist, "<br>Counties: ", harv_counties), 
  mode = "markers", 
  type = "scatter", 
  marker = list(size = 10),
  width = 650,
  height = 650)


ush_plot |> 
    layout(
        title = "2020 US House Validation",
         xaxis = list(title = "Actual Total Votes",
                      scaleanchor="y", scaleratio=1, 
                      dtick = 100000),
         yaxis = list(title = "CVR Total Votes",
                      scaleanchor="x", scaleratio=1,
                      dtick = 100000))  |> 
    add_trace(x = c(0, ~max(harv_DR, na.rm = TRUE)), 
              y = c(0, ~max(harv_DR, na.rm = TRUE)), 
              text = NA, mode = "lines", 
              marker = list(size = 1), 
              line = list(color = "rgba(0, 0, 0, 0.2)"), showlegend = FALSE)
```

## Presidential (county)

These plots look at our counts of Presidential vote choice at the county level.

First, a plot comparing the total Biden + Trump vote at the county level.

Here

* x-axis: Counts from our database
* y-axis: True values from CNN

```{r}
#| echo: false
#| message: false
#| warning: false
pres_summary <- read_csv("data/by-county_val.csv", show_col_types = FALSE)

pres_plot <- plot_ly(data = pres_summary, 
                     x = ~valid_DR, 
                     y = ~harv_DR, 
                     text = ~paste0("County: ", county_name, ", ", st), 
                     mode = "markers", 
                     type = "scatter", 
                     marker = list(size = 10),
                     width = 650,
                     height = 650)

pres_plot |> 
  layout(title = "2020 Presidential Validation",
         xaxis = list(title = "Actual Total Votes",
                      scaleanchor="y", scaleratio=1,
                      dtick = 500000),
         yaxis = list(title = "CVR Total Votes",
                      scaleanchor="x", scaleratio=1,
                      dtick = 500000)) |> 
    add_trace(x = c(0, ~max(harv_DR, na.rm = TRUE)), 
              y = c(0, ~max(harv_DR, na.rm = TRUE)), 
              text = NA, mode = "lines", 
              marker = list(size = 1), 
              line = list(color = "rgba(0, 0, 0, 0.2)"), showlegend = FALSE)
```


Second, looking at D vs. R separately by putting them on separate x-axis

* x-axis: Our count of the Biden vote minus the CNN count of the Biden vote, normalized by the CNN count
* y-axis: Our count of the Trump vote minus the CNN count of the Trump vote, normalized by the CNN count

```{r}
#| echo: false
#| message: false
#| warning: false
pres_plot_D <- plot_ly(data = pres_summary, 
                     x = ~ (err_D/valid_D), 
                     y = ~ (err_R/valid_R), 
                     text = ~glue("County: {county_name}, {st}
                                  Harvard count: {harv_D} Biden, {harv_R} Trump
                                  Valid count: {valid_D} Biden, {valid_R} Trump"), 
                     mode = "markers", 
                     type = "scatter", 
                     marker = list(size = 10),
                     width = 650,
                     height = 650)

pres_plot_D |> 
  layout(title = "2020 Presidential Validation",
         xaxis = list(title = "(CVR Biden - Valid Biden) / Valid Biden",
                      scaleanchor="y", scaleratio=1),
         yaxis = list(title = "(CVR Trump - Valid Trump) / Valid Trump",
                      scaleanchor="x", scaleratio=1)) |> 
    add_trace(x = c(~min((err_R/valid_R), na.rm = TRUE), ~max((err_D/valid_D), na.rm = TRUE)), 
              y = c(~min((err_R/valid_R), na.rm = TRUE), ~max((err_D/valid_D), na.rm = TRUE)), 
              text = NA, mode = "lines", 
              marker = list(size = 1), 
              line = list(color = "rgba(0, 0, 0, 0.2)"), showlegend = FALSE)
  
```

